@startuml


namespace nl.han.oose.jellema.rick.datalayer {
namespace nl.han.oose.jellema.rick.datalayer.database {
    class nl.han.oose.jellema.rick.datalayer.database.Database {
        - connection : Connection
        - databaseProperties : Properties
        + createConnection()
        + getConnection()
        + setPropertiesFiles()
    }
  }



  namespace nl.han.oose.jellema.rick.datalayer.dao {
    class nl.han.oose.jellema.rick.datalayer.dao.PlaylistsDao {
        - connection : Connection
        + setDatabase()
    }

    namespace interfaces {
          interface IPlaylistsDao <<Interface>> {
              {abstract} + all()
              {abstract} + create()
              {abstract} + delete()
              {abstract} + edit()
          }
    }

  }
  }

  nl.han.oose.jellema.rick.datalayer.dao.PlaylistsDao .left.|> nl.han.oose.jellema.rick.servicelayer.services.IPlaylistsDao
  nl.han.oose.jellema.rick.datalayer.dao.PlaylistsDao o-- nl.han.oose.jellema.rick.datalayer.database.Database : database


    namespace nl.han.oose.jellema.rick.servicelayer {
    namespace utils {
        class PropertiesFiles {
            - propertiesFile : Properties
            - propertiesFileName : String
            + getPropertiesFile()
            + loadFile()
          }
        }


      class Cache {
          - cache : HashMap<String, UserDTO>
      }

        class PlaylistService {
            + setCacheService()
            + setPlaylistsDao()
            + setTracksDao()
        }

            namespace interfaces {
              interface ICache <<Interface>> {
                  {abstract} + addToCache()
                  {abstract} + getUser()
                  {abstract} + userExists()
              }

              interface IPlaylistService <<Interface>> {
                  {abstract} + addTrack()
                  {abstract} + createPlaylist()
                  {abstract} + deletePlaylist()
                  {abstract} + deleteTrack()
                  {abstract} + editPlaylist()
                  {abstract} + getPlaylists()
                  {abstract} + getTracksOfPlaylist()
              }
            }
      }
 nl.han.oose.jellema.rick.datalayer.database.Database o-right- nl.han.oose.jellema.rick.servicelayer.utils.PropertiesFiles : loadProperties
      nl.han.oose.jellema.rick.servicelayer.Cache .left.|> nl.han.oose.jellema.rick.resourcelayer.ICache
      nl.han.oose.jellema.rick.servicelayer.PlaylistService .left.|> nl.han.oose.jellema.rick.resourcelayer.IPlaylistService
      nl.han.oose.jellema.rick.servicelayer.PlaylistService o-- nl.han.oose.jellema.rick.servicelayer.services.IPlaylistsDao : playlistDao
      nl.han.oose.jellema.rick.resourcelayer.ICache --o nl.han.oose.jellema.rick.servicelayer.PlaylistService : cache

        namespace nl.han.oose.jellema.rick.resourcelayer {
          class nl.han.oose.jellema.rick.resourcelayer.PlaylistResource {
              + EditPlaylist()
              + addTrackToPlaylist()
              + createPlaylist()
              + deletePlaylist()
              + deleteTrackFromPlaylist()
              + getPlaylists()
              + getTracksOfPlaylist()
              + setPlayListService()
          }
        }

        nl.han.oose.jellema.rick.resourcelayer.PlaylistResource o-right- nl.han.oose.jellema.rick.resourcelayer.IPlaylistService : playlistService


@enduml