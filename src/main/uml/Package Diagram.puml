@startuml

namespace nl.han.oose.jellema.rick.datalayer {
    class nl.han.oose.jellema.rick.datalayer.Database {
        - connection : Connection
        - databaseProperties : Properties
        + createConnection()
        + getConnection()
        + setPropertiesFiles()
    }
    namespace nl.han.oose.jellema.rick.datalayer.dao{
            class nl.han.oose.jellema.rick.datalayer.dao.PlaylistsDao {
                - connection : Connection
                + all()
                + create()
                + delete()
                + edit()
                + setDatabase()
            }
    }
  }

  nl.han.oose.jellema.rick.datalayer.dao.PlaylistsDao .right.|> nl.han.oose.jellema.rick.servicelayer.services.IPlaylistsDao
  nl.han.oose.jellema.rick.datalayer.dao.PlaylistsDao <-- nl.han.oose.jellema.rick.datalayer.Database : database


    namespace nl.han.oose.jellema.rick.servicelayer {
        namespace interfaces {
                          interface ICache <<Interface>> {
                              {abstract} + addToCache()
                              {abstract} + getUser()
                              {abstract} + userExists()
                          }

        }


        namespace nl.han.oose.jellema.rick.servicelayer.services {

         interface nl.han.oose.jellema.rick.servicelayer.services.IPlaylistsDao <<Interface>> {
                               {abstract} + all()
                               {abstract} + create()
                               {abstract} + delete()
                               {abstract} + edit()
                           }
         class Cache {
                  - cache : HashMap<String, UserDTO>
                  + addToCache()
                  + getUser()
                  + userExists()
              }

        class PlaylistService {
                + addTrack()
                + createPlaylist()
                + deletePlaylist()
                + deleteTrack()
                + editPlaylist()
                + getPlaylists()
                + getTracksOfPlaylist()
                + setCacheService()
                + setPlaylistsDao()
                + setTracksDao()
            }
        }



 nl.han.oose.jellema.rick.datalayer.Database -right-> nl.han.oose.jellema.rick.servicelayer.utils.PropertiesFiles : loadProperties

      nl.han.oose.jellema.rick.servicelayer.services.PlaylistService --> nl.han.oose.jellema.rick.servicelayer.services.IPlaylistsDao : playlistDao
      nl.han.oose.jellema.rick.servicelayer.services.Cache .left.|> nl.han.oose.jellema.rick.servicelayer.interfaces.ICache
      nl.han.oose.jellema.rick.servicelayer.services.PlaylistService .left.|> nl.han.oose.jellema.rick.resourcelayer.IPlaylistService
      nl.han.oose.jellema.rick.servicelayer.interfaces.ICache <-- nl.han.oose.jellema.rick.servicelayer.services.PlaylistService : cache



        nl.han.oose.jellema.rick.resourcelayer.PlaylistResource -right-> nl.han.oose.jellema.rick.resourcelayer.IPlaylistService : playlistService


@enduml